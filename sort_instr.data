// 55:035 SISC Project
// 		Matt Fina and Jacob Dye
//  	Bubble sort

88000001 //00:load immediate 1 into r0 to use for decrement/increment
88040000 //01: load 1 into r[4], address counter 1
88050001 //02: load 2 into r[5], address counter 2
18010000 //03: load address 0 into r1 - N (size of the list)
18060000 //04: load address 0 into r6
80101002 //05: dec r1
10420000 //06: load address 1 into r2 - first number of list, using r4 adr cnter
10530000 //07: load next address into r3 - using r5 addr cnter
88440001 //08: increment address counter 1
88550001 //09: increment address counter 2
80236002 //0A: r[6] <- r2 - r3; determine if second addr is bigger than first
43000005 //0B: branch to loading new address if r3>r2
30232000 //0C: else swap r2, r3
80404002 //0D: dec addr cnt1
80505002 //0E: dec addr cnt2
20420000 //0F: str r2 in addr cnt 1
20530000 //10: str r3 in addr cnt 3
88440001 //11: inc addr cnt1 back to where it was 
88550001 //12: inc addr cnt2 back to where it was
80108002 //13: r8 = r1 - r0; if zero flag not set, go back to start 
61000005 //14: branch back to start if n loops has occured

//might need to do an inner and outer loop, only 1 loop setup now

//04: START - load next number in the list into r3
//05:
//06:
//07: 
80101002 //08: decrement r1
62000000 //09: branch to START if r1 > 0
//0A: store
//0B: store
//0C:
//0D:
F0000000 //0F: all done!
